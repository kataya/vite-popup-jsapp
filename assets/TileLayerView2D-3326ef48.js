import{m as w,n as y,y as I,r as v,q as V,t as H,v as n,w as g,s as T,z as o,A as m,C as q}from"./index-4b712bf9.js";import"./Rasterizer-ddb18963.js";import"./Container-dbf0e9cd.js";import"./BufferPool-7efa9ef9.js";import"./color-b7de25a6.js";import"./WGLContainer-59eb68f8.js";import"./enums-b14466b3.js";import"./Texture-54f5847e.js";import"./ProgramTemplate-e046791a.js";import"./definitions-f717827e.js";import"./GeometryUtils-61915c2a.js";import"./VertexArrayObject-608f719a.js";import"./number-e491b09e.js";import"./StyleDefinition-29c49b98.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-2be100f3.js";import"./OrderIndependentTransparency-309a1bc3.js";import"./floatRGBA-d3873d8b.js";import"./testSVGPremultipliedAlpha-e5ac2185.js";import{o as U}from"./GraphicsView2D-c38bbb8f.js";import"./AttributeStoreView-ac28c119.js";import"./earcut-fa6784ee.js";import"./featureConversionUtils-cfca6a86.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-c47df0ad.js";import{t as C,o as f,n as d}from"./imageUtils-b9fc7b95.js";import{f as Q,d as S}from"./LayerView-d27ab40f.js";import{n as b}from"./HighlightGraphicContainer-69bef2ef.js";import{a as k}from"./RefreshableLayerView-e874cbbe.js";import{S as F,U as R,r as z}from"./drapedUtils-aedc3665.js";import"./cimAnalyzer-9d4f2bda.js";import"./fontUtils-06f0d4b5.js";import"./BidiEngine-9a40f2f4.js";import"./OptimizedGeometry-196224d4.js";import"./GeometryUtils-984e8446.js";import"./enums-f1a6a48a.js";import"./alignmentUtils-ae955d28.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-b587b411.js";import"./rasterizingUtils-6d388749.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./pbf-aa1b8b66.js";import"./imageutils-fc0d7e0b.js";import"./Matcher-8275c134.js";import"./visualVariablesUtils-962918e9.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-8654830d.js";import"./ExpandedCIM-396dda9a.js";import"./CircularArray-ef508845.js";import"./throttle-7bf02de9.js";import"./ComputedAttributeStorage-3e189b1e.js";import"./OptimizedFeature-4701473b.js";import"./arcadeTimeUtils-b2797d09.js";import"./executionError-c92d3b85.js";import"./projectionSupport-c0b50e0e.js";import"./json-48e3ea08.js";import"./basicInterfaces-4ab7cc6a.js";import"./normalizeUtilsSync-28e0e06d.js";import"./normalizeUtilsCommon-1c534942.js";import"./TiledDisplayObject-8556d9fb.js";import"./util-f9fd8bf1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./utils-0b5ba673.js";import"./BitmapTileContainer-83a3054e.js";import"./Bitmap-86590d5e.js";import"./TileContainer-029e65ec.js";import"./BaseGraphicContainer-eafca49c.js";import"./FeatureContainer-7908a04c.js";import"./scaleUtils-911a7dbb.js";import"./popupUtils-f6e193e4.js";const G=[0,0];let s=class extends k(C(Q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var e;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(e=this._highlightView)==null||e.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,e=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,e==null?void 0:e.effectiveMinLOD,e==null?void 0:e.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,r)=>this.fetchTile(i,r)}),this._tileStrategy=new v({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),F(this,this.layer)){const i=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new R({createFetchPopupFeaturesQueryGeometry:(r,h)=>z(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{i.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(V(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,e):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return H((e=this.layer.tileInfo)==null?void 0:e.spatialReference,t)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._enqueueTileFetch(t)))}isUpdating(){var t;return((t=this._fetchQueue)==null?void 0:t.updating)??!1}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(G,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(e),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i=this.tilemapCache,{signal:r,resamplingLevel:h=0}=e;if(!i)try{return await this._fetchImage(t,r)}catch(a){if(!n(a)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){const c=new g(u),_=await this.fetchTile(c,{...e,resamplingLevel:h+1});return d(this._tileInfoView,_,c,t)}}throw a}const p=new g(0,0,0,0);let l;try{if(await i.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),p.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);l=await this._fetchImage(p,r)}catch(a){if(n(a))throw a;l=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,l,p,t):l}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.requestRender(),t.once("attach",()=>this.requestUpdate())}catch(e){n(e)||T.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};o([m()],s.prototype,"_fetchQueue",void 0),o([m()],s.prototype,"resampling",null),o([m()],s.prototype,"tilemapCache",null),s=o([q("esri.views.2d.layers.TileLayerView2D")],s);const Zt=s;export{Zt as default};
